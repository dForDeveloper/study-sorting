{"version":3,"sources":["components/Box.js","components/Buttons.js","components/Explanation.js","components/Demo.js","components/App.js","serviceWorker.js","index.js"],"names":["Box","props","react_default","a","createElement","className","concat","divClass","id","Buttons","demoStarted","onClick","startDemo","currentStep","goToStep","restartDemo","lastStep","Explanation","getExplanation","_this$props$step","_this","step","boxIds","i","j","temp","animation","explanation","this","Component","Demo","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","fisherYatesShuffle","setState","arr","length","randomIndex","Math","floor","random","_ref","removeDuplicateIds","toArray","slice","getTempBox","stepData","map","num","index","components_Box","key","getInitialBoxes","state","getDescription","algorithmName","getDemoBoxes","iteration","_this$getClassNames","getClassNames","_this$getClassNames2","slicedToArray","iClass","jClass","getBubbleSortSteps","allSteps","saveStep","push","toConsumableArray","_ref2","getInsertionSortSteps","increment","_this$state","nextStep","_this$state2","components_Explanation","includes","components_Buttons","App","goToBubbleSort","showBubbleSort","goToInsertionSort","components_Demo","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.866f103b.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/main.scss';\n\nfunction Box(props) {\n  return (\n    <div className={`${props.divClass}`} >\n      <span className=\"Box--id\">{props.id}</span>\n    </div>\n  );\n}\n\nexport default Box;","import React from 'react';\nimport '../styles/main.scss';\n\nfunction Buttons(props) {\n  return (\n    <footer className=\"footer\">\n      {!props.demoStarted && \n        <div className=\"btn-container\">\n          <button className=\"btn-start\" onClick={props.startDemo}>\n            start\n          </button>\n        </div>\n      }\n      {props.demoStarted && \n        <div className=\"btn-container\">\n          {props.currentStep > 1 &&\n            <button className=\"btn-back\" onClick={() => props.goToStep(-1)}>\n              back\n            </button>\n          }\n          <button className=\"btn-restart\" onClick={props.restartDemo}>\n            restart\n          </button>\n          {props.currentStep !== props.lastStep &&\n            <button className=\"btn-next\" onClick={() => props.goToStep(1)}>\n              next\n            </button>\n          }\n        </div>\n      }\n    </footer>\n  )\n}\n\nexport default Buttons;","import React, { Component } from 'react';\nimport '../styles/main.scss';\n\nclass Explanation extends Component {\n  getExplanation = () => {\n    const { boxIds, i, j, temp, animation } = this.props.step;\n    switch (animation) {\n      case 'compare':\n        return (\n          <p>compare <span>{boxIds[i]}</span> and <span>{boxIds[j]}</span></p>\n        );\n      case 'compare-adjacent':\n        return (\n          <p>compare <span>{boxIds[j]}</span> and <span>{boxIds[i]}</span></p>\n        );\n      case 'swap':\n        return (\n          <p><span>{boxIds[i]}</span> swaps with <span>{boxIds[j]}</span></p>\n        );\n      case 'unsorted':\n        return (\n          <p>\n            <span>{boxIds[i]}</span> and <span>{boxIds[j]}</span>\n            {' are out of order'}\n          </p>\n        );\n      case 'sorted':\n        return (\n          <p>\n            <span>{boxIds[i]}</span> and <span>{boxIds[j]}</span>\n            {' are in the correct order'}\n          </p>\n        );\n      case 'stop-first-comparison':\n        return (\n          <p>\n            <span>{boxIds[j]}</span> and <span>{temp}</span>\n            {' are in the correct order'}\n          </p>\n        );\n      case 'stop-mult-comparisons':\n        return (\n          <p>\n            <span>{boxIds[j]}</span> and <span>{temp}</span>\n            {' are in the correct order'}\n          </p>\n        );\n      case 'examine':\n        return (\n          <p>\n            compare <span>{boxIds[i]}</span> with the elements to its left\n          </p>\n        );\n      case 'nothing-on-left':\n      case 'less-than-all':\n        return (\n          <p>\n            there are no numbers to compare with <span>{temp}</span>\n          </p>\n        );\n      case 'compare-again':\n        return (\n          <p>compare <span>{boxIds[j]}</span> and <span>{temp}</span></p>\n        );\n      case 'greater-first-comparison':\n      case 'greater-mult-comparisons':\n        return (\n          <p>\n            <span>{boxIds[j]}</span> is greater than <span>{temp}</span>\n          </p>\n        );\n      case 'shift':\n        return <p><span>{boxIds[j]}</span> shifts to the right</p>;\n      case 'insert':\n        return <p><span>{temp}</span> gets inserted</p>;\n      case 'end':\n        return <p>the array is sorted</p>;\n      default:\n        return <p></p>;\n    }\n  }\n\n  render() {\n    const explanation = this.getExplanation();\n    return (\n      <div className=\"explanation\">{explanation}</div>\n    );\n  }\n}\n\nexport default Explanation;","import React, { Component } from 'react';\nimport '../styles/main.scss';\nimport Box from './Box';\nimport Buttons from './Buttons';\nimport Explanation from './Explanation';\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boxIds: [],\n      allSteps: [],\n      currentStep: null\n    };\n  }\n\n  componentDidMount = () => {\n    const boxIds = [1, 2, 3, 4, 5, 6, 7, 8];\n    this.fisherYatesShuffle(boxIds);\n    this.setState({ boxIds });\n  }\n\n  fisherYatesShuffle = (arr) => {\n    for (let i = 0; i < arr.length - 1; i++) {\n      const randomIndex = Math.floor((Math.random() * (arr.length - i))) + i;\n      [arr[i], arr[randomIndex]] = [arr[randomIndex], arr[i]];\n    }\n  }\n\n  removeDuplicateIds = (arr, animation) => {\n    let [...boxIds] = arr;\n    for (let i = 0; i < boxIds.length - 1; i++) {\n      if (boxIds[i] === boxIds[i + 1] && animation !== 'shift') {\n        boxIds[i] = null;\n      } else if (boxIds[i] === boxIds[i + 1] && animation === 'shift') {\n        boxIds[i + 1] = null;\n      }\n    }\n    return boxIds;\n  }\n\n  getTempBox = (stepData) => {\n    const { temp, boxIds, i, j, animation } = stepData;\n    return boxIds.map((num, index) => {\n      let divClass = 'Box Box-temp';\n      if (animation === 'insert') {\n        divClass += ` insert${i - (j + 1)}`;\n      } else if (animation === 'compare-again') {\n        divClass += ' examine';\n      } else if (animation === 'less-than-all' ||\n          animation === 'stop-mult-comparisons') {\n        divClass += ' sorted';\n      }\n      if (index === i) {\n        return <Box id={temp} divClass={divClass} key={temp} />;\n      } else {\n        return <div key={num}></div>;\n      }\n    })\n  }\n\n  getInitialBoxes = () => {\n    return this.state.boxIds.map(num => {\n      return <Box id={num} divClass='Box' key={num} />\n    });\n  }\n\n  getDescription = (algorithmName) => {\n    if (algorithmName === 'Bubble Sort') {\n      return 'Bubble sort works by repeatedly swapping adjacent elements if ' +\n      'they are in the wrong order.';\n    } else if (algorithmName === 'Insertion Sort') {\n      return 'Insertion sort works by sorting the left side of an array one ' +\n      'element at a time.';\n    }\n  }\n\n  getDemoBoxes = (stepData) => {\n    const { i, j, iteration, boxIds, animation } = stepData;\n    let [iClass, jClass] = this.getClassNames(animation);\n    return boxIds.map((num, index) => {\n      let divClass = 'Box ';\n      if (index >= boxIds.length - iteration || animation === 'end') {\n        divClass += 'Box-final-position';\n      } else if (num === null) {\n        divClass = 'Box-empty'\n      } else if (index === i) {\n        divClass += iClass;\n      } else if (index === j) {\n        divClass += jClass;\n      }\n      return <Box id={num} divClass={divClass} key={num} />;\n    });\n  }\n\n  getClassNames = (animation) => {\n    switch (animation) {\n      case 'swap':\n        return ['right-swap', 'left-swap'];\n      case 'unsorted':\n        return ['unsorted', 'unsorted'];\n      case 'sorted':\n      case 'stop-first-comparison':\n        return ['sorted', 'sorted'];\n      case 'stop-mult-comparisons':\n        return ['', 'sorted'];\n      case 'examine':\n        return ['examine', ''];\n      case 'nothing-on-left':\n        return ['sorted', ''];\n      case 'compare':\n      case 'compare-adjacent':\n        return ['examine', 'examine'];\n      case 'compare-again':\n        return ['', 'examine'];\n      case 'greater-first-comparison':\n        return ['move-up unsorted', 'unsorted'];\n      case 'greater-mult-comparisons':\n        return ['', 'unsorted'];\n      case 'shift':\n        return ['', 'shift-right'];\n      default:\n      return ['', ''];\n    }\n  }\n\n  getBubbleSortSteps = () => {\n    const [...boxIds] = this.state.boxIds;\n    const allSteps = [];\n    let iteration, i, j;\n    const saveStep = (animation) => {\n      allSteps.push({ boxIds: [...boxIds], animation, iteration, i, j });\n    }\n    saveStep('');\n    for (iteration = 0; iteration < boxIds.length; iteration++) {    \n      for (i = 0; i < boxIds.length - iteration - 1; i++) {\n        j = i + 1;\n        saveStep('compare');\n        if (boxIds[i] > boxIds[j]) {\n          saveStep('unsorted');\n          saveStep('swap');\n          [boxIds[i], boxIds[j]] = [boxIds[j], boxIds[i]];\n        } else {\n          saveStep('sorted');\n        }\n      }    \n    }\n    saveStep('end');\n    return allSteps;\n  }\n\n  getInsertionSortSteps = () => {\n    const [...boxIds] = this.state.boxIds;\n    const allSteps = [];\n    let temp, i, j;\n    const saveStep = (animation) => {\n      allSteps.push({\n        boxIds: this.removeDuplicateIds([...boxIds], animation),\n        animation,\n        temp,\n        i,\n        j\n      });\n    }\n    saveStep('');\n    for (i = 0; i < boxIds.length; i++) {\n      temp = boxIds[i];\n      j = i - 1;\n      saveStep('examine');\n      if (j === -1) {\n        saveStep('nothing-on-left');\n      } else {\n        saveStep('compare-adjacent');\n        if (j >= 0 && boxIds[j] < temp) {\n          saveStep('stop-first-comparison');\n        }\n      }\n      while(j >= 0 && boxIds[j] > temp) {\n        if (i - j === 1) {\n          saveStep('greater-first-comparison');\n        } else {\n          saveStep('greater-mult-comparisons');\n        }\n        boxIds[j + 1] = boxIds[j];\n        saveStep('shift');\n        j--;\n        if (j === -1) {\n          saveStep('less-than-all');\n        } else {\n          saveStep('compare-again');\n          if (j >= 0 && boxIds[j] < temp) {\n            saveStep('stop-mult-comparisons');\n          }\n        }\n      }\n      if(boxIds[j + 1] !== temp) {\n        saveStep('insert');\n      }\n      boxIds[j + 1] = temp;\n    }\n    saveStep('end');\n    return allSteps;\n  }\n\n  startDemo = () => {\n    let allSteps;\n    if (this.props.algorithmName === 'Bubble Sort') {\n      allSteps = this.getBubbleSortSteps();\n    } else if (this.props.algorithmName === 'Insertion Sort') {\n      allSteps = this.getInsertionSortSteps();\n    }\n    this.setState({ allSteps, currentStep: 1 });\n  }\n\n  goToStep = (increment) => {\n    const { currentStep, allSteps } = this.state;\n    const nextStep = currentStep + increment;\n    if (0 < nextStep && nextStep < allSteps.length) {\n      this.setState({ currentStep: nextStep });\n    }\n  }\n\n  restartDemo = () => {\n    this.setState({\n      allSteps: [],\n      currentStep: null\n    })\n  }\n\n  render() {\n    const { allSteps, currentStep } = this.state;\n    const demoStarted = this.state.allSteps.length > 0 ? true: false;\n    const { boxIds } = demoStarted ? allSteps[currentStep] : this.state; \n    return (\n      <section className='Demo fade-in'>\n        <h2 className=\"Demo--h2\">{this.props.algorithmName}</h2>\n        <div className=\"explanation\">\n          {!demoStarted && \n            <p className=\"p--description\">\n              {this.getDescription(this.props.algorithmName)}\n            </p>}\n          {demoStarted &&\n            <Explanation step={allSteps[currentStep]} />}\n        </div>\n        <div className=\"algorithm\">\n          {boxIds.includes(null) && this.getTempBox(allSteps[currentStep])}\n          {demoStarted && this.getDemoBoxes(allSteps[currentStep])}\n          {!demoStarted && this.getInitialBoxes()}\n        </div>\n        <Buttons\n          demoStarted={demoStarted}\n          currentStep={this.state.currentStep}\n          lastStep={this.state.allSteps.length - 1}\n          startDemo={this.startDemo}\n          goToStep={this.goToStep}\n          restartDemo={this.restartDemo}\n        />\n      </section>\n    );\n  }\n}\n\nexport default Demo;","import React, { Component } from 'react';\nimport '../styles/main.scss';\nimport Demo from './Demo.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showBubbleSort: true\n    }\n  }\n\n  goToBubbleSort = () => {\n    this.setState({ showBubbleSort: true });\n  }\n\n  goToInsertionSort = () => {\n    this.setState({ showBubbleSort: false });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App--h1 fade-in\">study sorting</h1>\n          {this.state.showBubbleSort &&\n            <main className=\"main\">\n              <Demo algorithmName=\"Bubble Sort\" />\n              <div\n                className=\"main--right-arrow\"\n                onClick={this.goToInsertionSort}\n              >\n              </div>\n            </main>}\n          {!this.state.showBubbleSort &&\n            <main className=\"main\">\n              <div\n                className=\"main--left-arrow\"\n                onClick={this.goToBubbleSort}\n              >\n              </div>\n              <Demo algorithmName=\"Insertion Sort\" />\n            </main>}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}