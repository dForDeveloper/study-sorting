{"version":3,"sources":["components/Box.js","components/Buttons.js","components/Explanation.js","utils/algorithms.js","components/Demo.js","components/App.js","serviceWorker.js","index.js"],"names":["Box","props","react_default","a","createElement","className","concat","divClass","id","Buttons","demoStarted","onClick","startDemo","currentStep","goToStep","restartDemo","lastStep","Explanation","getExplanation","_this$props$step","_this","step","boxIDs","i","j","temp","animation","explanation","this","Component","algorithms","Bubble Sort","description","getSteps","startingNumbers","iteration","Object","toArray","slice","allSteps","saveStep","push","toConsumableArray","length","_ref","Insertion Sort","removeDuplicateIds","arr","Demo","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","state","fisherYatesShuffle","setState","randomIndex","Math","floor","random","getTempBox","stepData","map","num","index","components_Box","key","getInitialBoxes","getDemoBoxes","_this$getClassNames","getClassNames","_this$getClassNames2","slicedToArray","iClass","jClass","algorithmName","increment","_this$state","nextStep","_this$state2","components_Explanation","includes","components_Buttons","App","goToBubbleSort","displayedAlgorithm","goToInsertionSort","components_Demo","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79fb93ec.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Box(props) {\n  return (\n    <div className={`${props.divClass}`} >\n      <span className=\"Box--id\">{props.id}</span>\n    </div>\n  );\n}\n\nexport default Box;","import React from 'react';\n\nfunction Buttons(props) {\n  return (\n    <footer className=\"footer\">\n      {!props.demoStarted && \n        <div className=\"btn-container\">\n          <button className=\"btn-start\" onClick={props.startDemo}>\n            start\n          </button>\n        </div>\n      }\n      {props.demoStarted && \n        <div className=\"btn-container\">\n          {props.currentStep > 1 &&\n            <button className=\"btn-back\" onClick={() => props.goToStep(-1)}>\n              back\n            </button>\n          }\n          <button className=\"btn-restart\" onClick={props.restartDemo}>\n            restart\n          </button>\n          {props.currentStep !== props.lastStep &&\n            <button className=\"btn-next\" onClick={() => props.goToStep(1)}>\n              next\n            </button>\n          }\n        </div>\n      }\n    </footer>\n  )\n}\n\nexport default Buttons;","import React, { Component } from 'react';\n\nclass Explanation extends Component {\n  getExplanation = () => {\n    const { boxIDs, i, j, temp, animation } = this.props.step;\n    switch (animation) {\n      case 'compare':\n        return (\n          <p>compare <span>{boxIDs[i]}</span> and <span>{boxIDs[j]}</span></p>\n        );\n      case 'compare-adjacent':\n        return (\n          <p>compare <span>{boxIDs[j]}</span> and <span>{boxIDs[i]}</span></p>\n        );\n      case 'swap':\n        return (\n          <p><span>{boxIDs[i]}</span> swaps with <span>{boxIDs[j]}</span></p>\n        );\n      case 'unsorted':\n        return (\n          <p>\n            <span>{boxIDs[i]}</span> and <span>{boxIDs[j]}</span>\n            {' are out of order'}\n          </p>\n        );\n      case 'sorted':\n        return (\n          <p>\n            <span>{boxIDs[i]}</span> and <span>{boxIDs[j]}</span>\n            {' are in the correct order'}\n          </p>\n        );\n      case 'stop-first-comparison':\n        return (\n          <p>\n            <span>{boxIDs[j]}</span> and <span>{temp}</span>\n            {' are in the correct order'}\n          </p>\n        );\n      case 'stop-mult-comparisons':\n        return (\n          <p>\n            <span>{boxIDs[j]}</span> and <span>{temp}</span>\n            {' are in the correct order'}\n          </p>\n        );\n      case 'examine':\n        return (\n          <p>\n            compare <span>{boxIDs[i]}</span> with the elements to its left\n          </p>\n        );\n      case 'nothing-on-left':\n      case 'less-than-all':\n        return (\n          <p>\n            there are no numbers to compare with <span>{temp}</span>\n          </p>\n        );\n      case 'compare-again':\n        return (\n          <p>compare <span>{boxIDs[j]}</span> and <span>{temp}</span></p>\n        );\n      case 'greater-first-comparison':\n      case 'greater-mult-comparisons':\n        return (\n          <p>\n            <span>{boxIDs[j]}</span> is greater than <span>{temp}</span>\n          </p>\n        );\n      case 'shift':\n        return <p><span>{boxIDs[j]}</span> shifts to the right</p>;\n      case 'insert':\n        return <p><span>{temp}</span> gets inserted</p>;\n      case 'end':\n        return <p>the array is sorted</p>;\n      default:\n        return <p></p>;\n    }\n  }\n\n  render() {\n    const explanation = this.getExplanation();\n    return (\n      <div className=\"explanation\">{explanation}</div>\n    );\n  }\n}\n\nexport default Explanation;","const algorithms = {\n  'Bubble Sort': {\n    description: 'Bubble sort works by repeatedly swapping adjacent elements' +\n    ' if they are in the wrong order.',\n    getSteps: (startingNumbers) => {\n      const [...boxIDs] = startingNumbers;\n      const allSteps = [];\n      let iteration, i, j;\n      const saveStep = (animation) => {\n        allSteps.push({ boxIDs: [...boxIDs], animation, iteration, i, j });\n      }\n      saveStep('');\n      for (iteration = 0; iteration < boxIDs.length; iteration++) {    \n        for (i = 0; i < boxIDs.length - iteration - 1; i++) {\n          j = i + 1;\n          saveStep('compare');\n          if (boxIDs[i] > boxIDs[j]) {\n            saveStep('unsorted');\n            saveStep('swap');\n            [boxIDs[i], boxIDs[j]] = [boxIDs[j], boxIDs[i]];\n          } else {\n            saveStep('sorted');\n          }\n        }    \n      }\n      saveStep('end');\n      return allSteps;\n    }\n  },\n  'Insertion Sort': {\n    description: 'Insertion sort works by sorting the left side of an array ' +\n    'one element at a time.',\n    getSteps: (startingNumbers) => {\n      const [...boxIDs] = startingNumbers;\n      const removeDuplicateIds = (arr, animation) => {\n        let [...boxIDs] = arr;\n        for (let i = 0; i < boxIDs.length - 1; i++) {\n          if (boxIDs[i] === boxIDs[i + 1] && animation !== 'shift') {\n            boxIDs[i] = null;\n          } else if (boxIDs[i] === boxIDs[i + 1] && animation === 'shift') {\n            boxIDs[i + 1] = null;\n          }\n        }\n        return boxIDs;\n      }\n      const allSteps = [];\n      let temp, i, j;\n      const saveStep = (animation) => {\n        allSteps.push({\n          boxIDs: removeDuplicateIds([...boxIDs], animation),\n          animation,\n          temp,\n          i,\n          j\n        });\n      }\n      saveStep('');\n      for (i = 0; i < boxIDs.length; i++) {\n        temp = boxIDs[i];\n        j = i - 1;\n        saveStep('examine');\n        if (j === -1) {\n          saveStep('nothing-on-left');\n        } else {\n          saveStep('compare-adjacent');\n          if (j >= 0 && boxIDs[j] < temp) {\n            saveStep('stop-first-comparison');\n          }\n        }\n        while(j >= 0 && boxIDs[j] > temp) {\n          if (i - j === 1) {\n            saveStep('greater-first-comparison');\n          } else {\n            saveStep('greater-mult-comparisons');\n          }\n          boxIDs[j + 1] = boxIDs[j];\n          saveStep('shift');\n          j--;\n          if (j === -1) {\n            saveStep('less-than-all');\n          } else {\n            saveStep('compare-again');\n            if (j >= 0 && boxIDs[j] < temp) {\n              saveStep('stop-mult-comparisons');\n            }\n          }\n        }\n        if(boxIDs[j + 1] !== temp) {\n          saveStep('insert');\n        }\n        boxIDs[j + 1] = temp;\n      }\n      saveStep('end');\n      return allSteps;\n    }\n  }\n}\n\nexport default algorithms;","import React, { Component } from 'react';\nimport Box from './Box';\nimport Buttons from './Buttons';\nimport Explanation from './Explanation';\nimport algorithms from '../utils/algorithms';\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boxIDs: [1, 2, 3, 4, 5, 6, 7, 8],\n      allSteps: [],\n      currentStep: null\n    };\n  }\n\n  componentDidMount = () => {\n    const { boxIDs } = this.state;\n    this.fisherYatesShuffle(boxIDs);\n    this.setState({ boxIDs });\n  }\n\n  fisherYatesShuffle = (arr) => {\n    for (let i = 0; i < arr.length - 1; i++) {\n      const randomIndex = Math.floor((Math.random() * (arr.length - i))) + i;\n      [arr[i], arr[randomIndex]] = [arr[randomIndex], arr[i]];\n    }\n  }\n\n  getTempBox = (stepData) => {\n    const { temp, boxIDs, i, j, animation } = stepData;\n    return boxIDs.map((num, index) => {\n      let divClass = 'Box Box-temp';\n      if (animation === 'insert') {\n        divClass += ` insert${i - (j + 1)}`;\n      } else if (animation === 'compare-again') {\n        divClass += ' examine';\n      } else if (animation === 'less-than-all' ||\n          animation === 'stop-mult-comparisons') {\n        divClass += ' sorted';\n      }\n      if (index === i) {\n        return <Box id={temp} divClass={divClass} key={temp} />;\n      } else {\n        return <div key={num}></div>;\n      }\n    })\n  }\n\n  getInitialBoxes = () => {\n    return this.state.boxIDs.map(num => {\n      return <Box id={num} divClass='Box' key={num} />\n    });\n  }\n\n  getDemoBoxes = (stepData) => {\n    const { i, j, iteration, boxIDs, animation } = stepData;\n    let [iClass, jClass] = this.getClassNames(animation);\n    return boxIDs.map((num, index) => {\n      let divClass = 'Box ';\n      if (index >= boxIDs.length - iteration || animation === 'end') {\n        divClass += 'Box-final-position';\n      } else if (num === null) {\n        divClass = 'Box-empty'\n      } else if (index === i) {\n        divClass += iClass;\n      } else if (index === j) {\n        divClass += jClass;\n      }\n      return <Box id={num} divClass={divClass} key={num} />;\n    });\n  }\n\n  getClassNames = (animation) => {\n    switch (animation) {\n      case 'swap':\n        return ['right-swap', 'left-swap'];\n      case 'unsorted':\n        return ['unsorted', 'unsorted'];\n      case 'sorted':\n      case 'stop-first-comparison':\n        return ['sorted', 'sorted'];\n      case 'stop-mult-comparisons':\n        return ['', 'sorted'];\n      case 'examine':\n        return ['examine', ''];\n      case 'nothing-on-left':\n        return ['sorted', ''];\n      case 'compare':\n      case 'compare-adjacent':\n        return ['examine', 'examine'];\n      case 'compare-again':\n        return ['', 'examine'];\n      case 'greater-first-comparison':\n        return ['move-up unsorted', 'unsorted'];\n      case 'greater-mult-comparisons':\n        return ['', 'unsorted'];\n      case 'shift':\n        return ['', 'shift-right'];\n      default:\n      return ['', ''];\n    }\n  }\n\n  startDemo = () => {\n    const { boxIDs } = this.state;\n    const { algorithmName } = this.props;\n    let allSteps = algorithms[algorithmName].getSteps(boxIDs);\n    this.setState({ allSteps, currentStep: 1 });\n  }\n\n  goToStep = (increment) => {\n    const { currentStep, allSteps } = this.state;\n    const nextStep = currentStep + increment;\n    if (0 < nextStep && nextStep < allSteps.length) {\n      this.setState({ currentStep: nextStep });\n    }\n  }\n\n  restartDemo = () => {\n    this.setState({\n      allSteps: [],\n      currentStep: null\n    })\n  }\n\n  render() {\n    const { allSteps, currentStep } = this.state;\n    const { algorithmName } = this.props;\n    const demoStarted = this.state.allSteps.length > 0 ? true: false;\n    const { boxIDs } = demoStarted ? allSteps[currentStep] : this.state; \n    return (\n      <section className='Demo fade-in'>\n        <h2 className=\"Demo--h2\">{this.props.algorithmName}</h2>\n        <div className=\"explanation\">\n          {!demoStarted && \n            <p className=\"p--description\">\n              {algorithms[algorithmName].description}\n            </p>}\n          {demoStarted &&\n            <Explanation step={allSteps[currentStep]} />}\n        </div>\n        <div className=\"algorithm\">\n          {boxIDs.includes(null) && this.getTempBox(allSteps[currentStep])}\n          {demoStarted && this.getDemoBoxes(allSteps[currentStep])}\n          {!demoStarted && this.getInitialBoxes()}\n        </div>\n        <Buttons\n          demoStarted={demoStarted}\n          currentStep={this.state.currentStep}\n          lastStep={this.state.allSteps.length - 1}\n          startDemo={this.startDemo}\n          goToStep={this.goToStep}\n          restartDemo={this.restartDemo}\n        />\n      </section>\n    );\n  }\n}\n\nexport default Demo;","import React, { Component } from 'react';\nimport Demo from './Demo.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      displayedAlgorithm: 'Bubble Sort'\n    }\n  }\n\n  goToBubbleSort = () => {\n    this.setState({ displayedAlgorithm: 'Bubble Sort' });\n  }\n\n  goToInsertionSort = () => {\n    this.setState({ displayedAlgorithm: 'Insertion Sort' });\n  }\n\n  render() {\n    const { displayedAlgorithm } = this.state;\n    return (\n      <div className=\"App\">\n        <h1 className=\"App--h1 fade-in\">study sorting</h1>\n          {displayedAlgorithm === 'Bubble Sort' &&\n            <main className=\"main\">\n              <Demo algorithmName=\"Bubble Sort\" />\n              <div\n                className=\"main--right-arrow\"\n                onClick={this.goToInsertionSort}\n              >\n              </div>\n            </main>}\n          {displayedAlgorithm === 'Insertion Sort' &&\n            <main className=\"main\">\n              <div\n                className=\"main--left-arrow\"\n                onClick={this.goToBubbleSort}\n              >\n              </div>\n              <Demo algorithmName=\"Insertion Sort\" />\n            </main>}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}